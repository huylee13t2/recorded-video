{"ast":null,"code":"import _defineProperty from \"/var/www/html/jobs/reactjs/recorded/recorded-video/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/jobs/reactjs/recorded/recorded-video/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/jobs/reactjs/recorded/recorded-video/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/jobs/reactjs/recorded/recorded-video/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/jobs/reactjs/recorded/recorded-video/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/jobs/reactjs/recorded/recorded-video/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/jobs/reactjs/recorded/recorded-video/src/containers/SliderBar.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      marginLeft: drawerWidth\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      // flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar SliderBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SliderBar, _React$Component);\n\n  function SliderBar(props) {\n    var _this;\n\n    _classCallCheck(this, SliderBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SliderBar).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SliderBar, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2, _React$createElement;\n\n      var classes = this.props.classes;\n      return React.createElement(Drawer, (_React$createElement = {\n        className: classes.drawer,\n        variant: \"permanent\"\n      }, _defineProperty(_React$createElement, \"className\", classNames(classes.drawer, (_classNames = {}, _defineProperty(_classNames, classes.drawerOpen, this.state.open), _defineProperty(_classNames, classes.drawerClose, !this.state.open), _classNames))), _defineProperty(_React$createElement, \"classes\", {\n        paper: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.drawerOpen, this.state.open), _defineProperty(_classNames2, classes.drawerClose, !this.state.open), _classNames2))\n      }), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(InboxIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }) : React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(InboxIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }) : React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return SliderBar;\n}(React.Component);\n\nSliderBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(SliderBar);","map":{"version":3,"sources":["/var/www/html/jobs/reactjs/recorded/recorded-video/src/containers/SliderBar.jsx"],"names":["React","PropTypes","withStyles","classNames","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Drawer","List","drawerWidth","styles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","backgroundColor","palette","background","default","padding","spacing","unit","SliderBar","props","state","classes","drawerOpen","open","drawerClose","paper","map","text","index","Component","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass SliderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        className={classNames(classes.drawer, {\n          [classes.drawerOpen]: this.state.open,\n          [classes.drawerClose]: !this.state.open,\n        })}\n        classes={{\n          paper: classNames({\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open,\n          }),\n        }}\n        // anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nSliderBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SliderBar);"]},"metadata":{},"sourceType":"module"}